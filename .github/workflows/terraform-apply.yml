name: 'Terraform Apply'

on:
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment:
      azure-dev
    env:
      TF_WORKING_DIR: ./terraform/
      TF_VAR_az_subscription_id: ${{ secrets.tf_var_az_subscription_id }}
      TF_VAR_az_client_id: ${{ secrets.tf_var_az_client_id }}
      TF_VAR_az_client_secret: ${{ secrets.tf_var_az_client_secret }}
      TF_VAR_az_tenant_id: ${{ secrets.tf_var_az_tenant_id }}
      TF_VAR_info_project: ${{ secrets.tf_var_info_project }}
      TF_VAR_info_environment: ${{ secrets.tf_var_info_environment }}
      TF_VAR_az_location: ${{ secrets.tf_var_az_location }}
      TF_VAR_az_analytics_retention: ${{ secrets.tf_var_az_analytics_retention }}
      TF_VAR_aks_node_data: ${{ secrets.tf_var_aks_node_data }}
      TF_VAR_win_admin_password: ${{ secrets.tf_var_win_admin_password }}
      TF_VAR_win_admin_username: ${{ secrets.tf_var_win_admin_username }}
      TF_VAR_linux_admin_username: ${{ secrets.tf_var_linux_admin_username }}
      TF_VAR_linux_admin_ssh_key: ${{ secrets.tf_var_linux_admin_ssh_key }}
      ARM_CLIENT_ID: ${{ secrets.arm_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.arm_subscription_id }}
      ARM_TENANT_ID: ${{ secrets.arm_tenant_id }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Configure Azure CLI Login
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Install the specific version of Terraform CLI.
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.4

    - name: Terraform Apply
      run: terraform apply -auto-approve